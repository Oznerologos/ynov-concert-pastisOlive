[{"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\index.js":"1","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\App.js":"2","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\FAQ.js":"3","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\RestaurationPresentation.js":"4","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\NotFound.js":"5","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Contact.js":"6","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\RestaurationReservation.js":"7","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Programmation.js":"8","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\ConcertReservation.js":"9","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Inscription.js":"10","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Login.js":"11","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\From_Pre_Re.js":"12","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\PrivatisationPresentation.js":"13","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Concert.js":"14","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\FakePage.js":"15","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\AjoutConcerts.js":"16","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\CGU.js":"17","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\services\\authApi.js":"18","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\MentionsLegales.js":"19","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\context\\AuthContext.js":"20","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\SeatsBookingContext.js":"21","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertContext.js":"22","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PrivateRoute.js":"23","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ScrollToTop.js":"24","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\UserContext.js":"25","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Home.js":"26","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\HeaderNav.js":"27","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\FooterNav.js":"28","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ContactMain.js":"29","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\RestoPresentationMain.js":"30","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\FaqMain.js":"31","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertReservationMain.js":"32","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\RestoReservationMain.js":"33","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\From_Pre_Reserver.js":"34","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\InscriptionMain.js":"35","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PrivatisationPresentationMain.js":"36","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\AjoutConcertsMain.js":"37","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\LoginInscription.js":"38","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertMain.js":"39","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ProgrammationMain.js":"40","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\CarouselActu.js":"41","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConnectDeconnect.js":"42","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\citiesSelect.js":"43","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\SimpleModal.js":"44","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\CarouselConcert.js":"45","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepperConcert.js":"46","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepPanier.js":"47","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepReservation.js":"48","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepCoordonnees.js":"49","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepPaiement.js":"50","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepConfirmation.js":"51","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PlanSalle.js":"52","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\GoogleMap.js":"53","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ProgressCircle.js":"54","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\Seat.js":"55"},{"size":1762,"mtime":1612899300070,"results":"56","hashOfConfig":"57"},{"size":6022,"mtime":1612992856412,"results":"58","hashOfConfig":"57"},{"size":341,"mtime":1612899300111,"results":"59","hashOfConfig":"57"},{"size":439,"mtime":1612899300113,"results":"60","hashOfConfig":"57"},{"size":152,"mtime":1612899300113,"results":"61","hashOfConfig":"57"},{"size":394,"mtime":1612899410657,"results":"62","hashOfConfig":"57"},{"size":434,"mtime":1612899300114,"results":"63","hashOfConfig":"57"},{"size":877,"mtime":1612899410657,"results":"64","hashOfConfig":"57"},{"size":431,"mtime":1612899410656,"results":"65","hashOfConfig":"57"},{"size":405,"mtime":1612899300112,"results":"66","hashOfConfig":"57"},{"size":442,"mtime":1612993184918,"results":"67","hashOfConfig":"57"},{"size":358,"mtime":1612899300112,"results":"68","hashOfConfig":"57"},{"size":407,"mtime":1612899410657,"results":"69","hashOfConfig":"57"},{"size":375,"mtime":1612899300111,"results":"70","hashOfConfig":"57"},{"size":221,"mtime":1612899300112,"results":"71","hashOfConfig":"57"},{"size":400,"mtime":1612899300110,"results":"72","hashOfConfig":"57"},{"size":7767,"mtime":1612899300110,"results":"73","hashOfConfig":"57"},{"size":1207,"mtime":1612993432505,"results":"74","hashOfConfig":"57"},{"size":4512,"mtime":1612899300113,"results":"75","hashOfConfig":"57"},{"size":116,"mtime":1612899300070,"results":"76","hashOfConfig":"57"},{"size":397,"mtime":1612899410655,"results":"77","hashOfConfig":"57"},{"size":112,"mtime":1612899410651,"results":"78","hashOfConfig":"57"},{"size":406,"mtime":1612991245357,"results":"79","hashOfConfig":"57"},{"size":361,"mtime":1612991329979,"results":"80","hashOfConfig":"57"},{"size":157,"mtime":1612991330003,"results":"81","hashOfConfig":"57"},{"size":8359,"mtime":1612991330004,"results":"82","hashOfConfig":"57"},{"size":6819,"mtime":1612993221214,"results":"83","hashOfConfig":"57"},{"size":6427,"mtime":1612899300054,"results":"84","hashOfConfig":"57"},{"size":3577,"mtime":1612899300054,"results":"85","hashOfConfig":"57"},{"size":4688,"mtime":1612899300057,"results":"86","hashOfConfig":"57"},{"size":7279,"mtime":1612899300054,"results":"87","hashOfConfig":"57"},{"size":335,"mtime":1612899410652,"results":"88","hashOfConfig":"57"},{"size":5164,"mtime":1612899300057,"results":"89","hashOfConfig":"57"},{"size":218,"mtime":1612899300054,"results":"90","hashOfConfig":"57"},{"size":8889,"mtime":1612904911864,"results":"91","hashOfConfig":"57"},{"size":2578,"mtime":1612899410653,"results":"92","hashOfConfig":"57"},{"size":7019,"mtime":1612974676756,"results":"93","hashOfConfig":"57"},{"size":3329,"mtime":1612991329978,"results":"94","hashOfConfig":"57"},{"size":6503,"mtime":1612991329978,"results":"95","hashOfConfig":"57"},{"size":13050,"mtime":1612991329979,"results":"96","hashOfConfig":"57"},{"size":2003,"mtime":1612991329977,"results":"97","hashOfConfig":"57"},{"size":1128,"mtime":1612990606466,"results":"98","hashOfConfig":"57"},{"size":1362,"mtime":1612899300069,"results":"99","hashOfConfig":"57"},{"size":907,"mtime":1612899300066,"results":"100","hashOfConfig":"57"},{"size":3926,"mtime":1612899410651,"results":"101","hashOfConfig":"57"},{"size":6431,"mtime":1612991330003,"results":"102","hashOfConfig":"57"},{"size":5020,"mtime":1612991330002,"results":"103","hashOfConfig":"57"},{"size":5701,"mtime":1612991330002,"results":"104","hashOfConfig":"57"},{"size":14187,"mtime":1612991329981,"results":"105","hashOfConfig":"57"},{"size":7228,"mtime":1612991330001,"results":"106","hashOfConfig":"57"},{"size":3456,"mtime":1612991329981,"results":"107","hashOfConfig":"57"},{"size":4243,"mtime":1612899410653,"results":"108","hashOfConfig":"57"},{"size":2463,"mtime":1612899300055,"results":"109","hashOfConfig":"57"},{"size":237,"mtime":1612899300056,"results":"110","hashOfConfig":"57"},{"size":3274,"mtime":1612991329980,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"pydjle",{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\index.js",[],["234","235"],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\App.js",["236","237"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.scss';\nimport { BrowserRouter, Route, Switch,withRouter, HashRouter } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport FAQ from './pages/FAQ';\nimport NotFound from './pages/NotFound';\nimport RestaurationPresentation from './pages/RestaurationPresentation';\nimport RestaurationReservation from './pages/RestaurationReservation';\nimport Programmation from './pages/Programmation';\nimport ConcertReservation from './pages/ConcertReservation';\nimport PrivatisationPresentation from './pages/PrivatisationPresentation';\nimport From_re from './pages/From_Pre_Re';\nimport Inscription from './pages/Inscription';\nimport Login from './pages/Login';\nimport AuthApi from './services/authApi';\nimport AuthContext from './context/AuthContext';\nimport FakePage from './pages/FakePage';\nimport AjoutConcerts from './pages/AjoutConcerts';\nimport Concert from './pages/Concert';\nimport CGU from './pages/CGU';\nimport SeatsBookingContext from './components/SeatsBookingContext';\nimport MentionsLegales from './pages/MentionsLegales';\nimport ConcertContext from './components/ConcertContext';\nimport UserContext from './components/UserContext';\nimport ScrollToTop from './components/ScrollToTop';\nimport Menu from './components/HeaderNav'\nimport PrivateRoute from './components/PrivateRoute';\n\n\nAuthApi.init();\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(AuthApi.isAuth());\n  const NavbarRouter = withRouter(Menu);\n\n  const [seats, setSeats] = useState([]);\n  const [prices, setPrices] = useState(0);\n  const [deliveryPrice, setDeliveryPrice] = useState(0);\n  const [deliveryMode, setDeliveryMode] = useState('');\n  const [purchases, setPurchases] = useState(0);\n  const [activeStep, setActiveStep] = useState(0);\n  const [bookingDetails, setBookingDetails] = useState({\n    bookings: []\n  })\n  const [cityFilter, setCityFilter] = useState(0);\n  const [styleFilter, setStyleFilter] = useState(0);\n  const [dateDebutFilter, setDateDebutFilter] = useState('');\n  const [dateFinFilter, setDateFinFilter] = useState('');\n\n  const contextVal = { seats, setSeats, prices, setPrices, deliveryPrice, setDeliveryPrice, deliveryMode, setDeliveryMode, purchases, setPurchases, activeStep, setActiveStep, bookingDetails, setBookingDetails, cityFilter, setCityFilter, styleFilter, setStyleFilter, dateDebutFilter, setDateDebutFilter, dateFinFilter, setDateFinFilter }\n\n  const contextValue = {\n    isAuth,\n    setIsAuth\n  }\n\n  const [concert, setConcert] = useState([]);\n  const [user, setUser] = useState([]);\n  const [reservation, setReservation] = useState([]);\n\n  const contextConcert = { concert, setConcert };\n  const contextUser = { user, setUser, reservation, setReservation };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      <ConcertContext.Provider value={contextConcert}>\n        <SeatsBookingContext.Provider value={contextVal}>\n          <BrowserRouter>\n          <ScrollToTop>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/Contact\" component={Contact} />\n              <Route path=\"/FAQ\" component={FAQ} />\n              <Route path=\"/MentionsLegales\" component={MentionsLegales} />\n              <Route path=\"/RestaurationPresentation\" component={RestaurationPresentation} />\n              <Route path=\"/RestaurationReservation\" component={RestaurationReservation} />\n              <Route path=\"/ConcertReservation\" component={ConcertReservation} />\n              <Route path=\"/Programmation\" component={Programmation} />\n              <Route path=\"/PrivatisationPresentation\" component={PrivatisationPresentation} />\n              <Route path=\"/From_re\" component={From_re} />\n              <Route path=\"/Concert\" component={Concert} />\n              <Route path=\"/CGU\" component={CGU} />\n              <Route path=\"/Login\" component={Login} />\n              <Route path=\"/FakePage\" component={FakePage} />\n              <Route path=\"/Inscription\" component={Inscription} />\n              <PrivateRoute path=\"/AjoutConcerts\" component={AjoutConcerts} />\n              <Route component={NotFound} />\n            </Switch>\n            </ScrollToTop>\n          </BrowserRouter>\n        </SeatsBookingContext.Provider>\n        <UserContext.Provider value={contextUser}>\n          <SeatsBookingContext.Provider value={contextVal}>\n            <BrowserRouter>\n              <ScrollToTop>\n                <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/Contact\" component={Contact} />\n                  <Route path=\"/FAQ\" component={FAQ} />\n                  <Route path=\"/MentionsLegales\" component={MentionsLegales} />\n                  <Route path=\"/RestaurationPresentation\" component={RestaurationPresentation} />\n                  <Route path=\"/RestaurationReservation\" component={RestaurationReservation} />\n                  <Route path=\"/ConcertReservation\" component={ConcertReservation} />\n                  <Route path=\"/Programmation\" component={Programmation} />\n                  <Route path=\"/PrivatisationPresentation\" component={PrivatisationPresentation} />\n                  <Route path=\"/From_re\" component={From_re} />\n                  <Route path=\"/Concert\" component={Concert} />\n                  <Route path=\"/CGU\" component={CGU} />\n                  <Route path=\"/Login\" component={Login} />\n                  <Route path=\"/FakePage\" component={FakePage} />\n                  <Route path=\"/Inscription\" component={Inscription} />\n                  <Route path=\"/AjoutConcerts\" component={AjoutConcerts} />\n                  <Route component={NotFound} />\n                </Switch>\n              </ScrollToTop>\n            </BrowserRouter>\n          </SeatsBookingContext.Provider>\n        </UserContext.Provider>\n      </ConcertContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\FAQ.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\RestaurationPresentation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\NotFound.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Contact.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\RestaurationReservation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Programmation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\ConcertReservation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Inscription.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Login.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\From_Pre_Re.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\PrivatisationPresentation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Concert.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\FakePage.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\AjoutConcerts.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\CGU.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\services\\authApi.js",["238"],"import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nfunction logout() {\n    window.localStorage.removeItem('authToken');\n    delete axios.defaults.headers[\"Authorization\"];\n}\n\nfunction auth(credentials) {\n    return axios\n        .post(\"https://localhost:8000/api/login_check\", credentials)\n        .then(response => response.data.token)\n        .then(token => {\n            window.localStorage.setItem('authToken', token);\n        \n            _setAxiosToken(token);\n\n            return true;\n        });\n}\n\nfunction init() {\n    const token = window.localStorage.getItem('authToken');\n    if(token) {\n        const jwtData = jwtDecode(token);\n\n        if(jwtData.exp * 1000 > new Date().getTime()) {\n            _setAxiosToken(token);\n        }\n    }\n}\n\nfunction isAuth() {\n    const token = window.localStorage.getItem('authToken');\n    if(token) {\n        const jwtData = jwtDecode(token);\n\n        if(jwtData.exp * 1000 > new Date().getTime()) {\n            return true\n        }\n        return false\n    }\n    return false\n} \n\nfunction _setAxiosToken(token) {\n    axios.defaults.headers[\"Authorization\"] = \"Bearer \" + token;\n}\n\nexport default {\n    auth,\n    logout,\n    init,\n    isAuth\n}","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\MentionsLegales.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\context\\AuthContext.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\SeatsBookingContext.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertContext.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PrivateRoute.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ScrollToTop.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\UserContext.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\pages\\Home.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\HeaderNav.js",["239"],"import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { NavLink } from 'react-router-dom';\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Logo from '../media/img/logo-2.png';\nimport SeatsBookingContext from './SeatsBookingContext';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport Menu from './ConnectDeconnect';\n\nclass HeaderNav extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { isOpen: false }\n      }\n\n      static contextType = SeatsBookingContext;\n    \n      handleOpen = () => {\n        this.setState({ isOpen: true })\n      }\n    \n      handleClose = () => {\n         this.setState({ isOpen: false })\n      }\n\n      setCityFilter(){\n        this.context.setCityFilter(this.props.id); // Persistance filtre ville        \n      }\n\nrender(history) {\n\n    let cart;\n    let linkCart;\n    const contArray = this.context.seats;\n\n    const persistantIconeContext = JSON.parse(localStorage.getItem(\"itemsPanier\"));\n    if((contArray.length > 0) && (contArray !== null)){\n        cart = <p>{contArray.length}</p>;\n        linkCart =  <NavLink exact to=\"/ConcertReservation\" onClick={() => this.context.setActiveStep(1)} className=\"purchase\"><i className=\"fas fa-shopping-basket\"></i>{cart}</NavLink>\n    } else if(persistantIconeContext !== null){\n        cart = <p>{persistantIconeContext}</p>;\n        linkCart =  <NavLink exact to=\"/ConcertReservation\" onClick={() => this.context.setActiveStep(1)} className=\"purchase\"><i className=\"fas fa-shopping-basket\"></i>{cart}</NavLink>\n    } else {\n        linkCart = <NavLink exact to=\"/Programmation\" className=\"purchase\"><i className=\"fas fa-shopping-basket\"></i></NavLink>\n    }\n\n    return(\n\n        <Navbar bg=\"dark\" expand=\"lg\" sticky=\"top\">\n                    <NavLink exact to=\"/\" className=\"navbar-brand-link\">\n                        <Navbar.Brand>\n                            <img src={Logo} width=\"180px\" alt=\"logo\"/>\n                        </Navbar.Brand>\n                    </NavLink>\n                    <div className=\"linksCont\">\n                    <div className=\"navContainer\">\n                    {/*<NavLink exact to=\"/Programmation\" className=\"majorLink\">PROGRAMMATION</NavLink>*/}\n                    <NavDropdown title=\"PROGRAMMATION\" id=\"nav-dropdown\" renderMenuOnMount={true}>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={1} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Tous les évènements</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={2} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Aix-en-Provence</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={3} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Bourges</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={4} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Cannes</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={5} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Dunkerque</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/Programmation#programmationAnchor\" id={6} onClick={() => this.setCityFilter()}>\n                            <NavDropdown.Item>Echirolles</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/FakePage\">\n                            <NavDropdown.Item id=\"\">Comment réserver?</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavDropdown title=\"RESTAURATION\" id=\"nav-dropdown\" renderMenuOnMount={true}>\n                        <LinkContainer exact to=\"/RestaurationPresentation\">\n                            <NavDropdown.Item>Présentation</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/RestaurationReservation\">\n                            <NavDropdown.Item>Réserver</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                <NavDropdown title=\"PARKING\" id=\"nav-dropdown\" renderMenuOnMount={true}>\n                        <LinkContainer exact to=\"/fakePage\">\n                            <NavDropdown.Item>Présentation</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/fakePage\">\n                            <NavDropdown.Item>Réserver</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                <NavDropdown title=\"PRIVATISATION\" id=\"nav-dropdown\" renderMenuOnMount={true}>\n                        <LinkContainer to=\"/PrivatisationPresentation\">\n                            <NavDropdown.Item>Présentation</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/fakePage\">\n                            <NavDropdown.Item>Réserver</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                    <NavLink exact to=\"/fakePage\" className=\"majorLink\">ACTUALITÉS</NavLink>\n\n                <NavDropdown title=\"INFOS PRATIQUES\" id=\"nav-dropdown\" renderMenuOnMount={true}>\n                        <LinkContainer exact to=\"/fakePage\">\n                            <NavDropdown.Item>Comment venir ?</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer exact to=\"/FAQ\">\n                            <NavDropdown.Item>FAQ</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n\n                <NavLink exact to=\"/Contact\" className=\"majorLink\">CONTACT</NavLink>\n</div>\n                    \n\n    <div className=\"searchLine\">\n    <Form inline>\n      <Form.Control type=\"text\" placeholder=\"Search\" className=\"mr-sm-2 searchBar w-100\" />\n      <Button variant=\"outline-blue\"><i className=\"fas fa-search\"></i></Button>\n    </Form> \n            </div>\n         \n            </div>\n            <Menu history={history}/>\n         \n           {linkCart}\n            </Navbar>\n\n    )\n}\n\n}\n\nexport default HeaderNav;","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\FooterNav.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ContactMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\RestoPresentationMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\FaqMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertReservationMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\RestoReservationMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\From_Pre_Reserver.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\InscriptionMain.js",["240","241","242","243","244","245","246","247"],"import React from \"react\";\nimport axios from \"axios\";\n\nlet loc;\n\n\nclass InscriptionMain extends React.Component {\n  clear() {\n\n    document.getElementById(\"myForm\").reset();\n\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const user = {\n      mail: this.state.email,\n      password: this.state.password,\n      gender: this.state.sexe,\n      street: this.state.immeuble,\n      building: this.state.voie,\n      address_complement: this.state.etc,\n      postal_code: this.state.cp,\n      country: this.state.pays,\n      phone: this.state.telephone\n    }\n\n\n\n    axios.post('https://127.0.0.1:8000/user/new', user).then(res => {\n      console.log(res);\n      console.log(res.data);\n      // window.location.replace = 'domain.dev/';\n    })\n\n  }\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n\n  }\n  handleChangePass = event => {\n    this.setState({ password: event.target.value });\n  }\n  handleChangeNom = event => {\n    this.setState({ nom: event.target.value });\n  }\n  handleChangePrenom = event => {\n    this.setState({ prenom: event.target.value });\n  }\n  handleChangeVoie = event => {\n    this.setState({ voie: event.target.value });\n  }\n\n  handleChangeSexe = event => {\n    this.setState({ sexe: event.target.value });\n  }\n  handleChangeImmeuble = event => {\n    this.setState({ immeuble: event.target.value });\n  }\n  handleChangeEtc = event => {\n    this.setState({ etc: event.target.value });\n  }\n  handleChangeCp = event => {\n    this.setState({ cp: event.target.value });\n  }\n  handleChangeVille = event => {\n    this.setState({ ville: event.target.value });\n  }\n  handleChangePays = event => {\n    this.setState({ pays: event.target.value });\n  }\n  handleChangeTelephone = event => {\n    this.setState({ telephone: event.target.value });\n  }\n  handleChangeNaissance = event => {\n    this.setState({ naissance: event.target.value });\n  }\n  render() {\n\n    loc = (window.location.pathname);\n\n    if (loc === \"/Inscription/achat\") {\n      return (\n        <div className=\"contIn\">\n          <div id=\"myForm\" >\n            <form onSubmit={this.handleSubmit}>\n              <h1 className=\"tinsc\">Inscription</h1>\n              <div className=\"contenaireCreate\">\n\n\n                <label className=\"lc\">Adresse e-mai *</label>\n                <input id=\"clear1\" type=\"mail\" name=\"email\" onChange={this.handleChange} />\n                <br />\n                <label className=\"lc\">Comfirmation e-mai *</label>\n                <input id=\"clear2\" type=\"mail\" name=\"emailconfirme\" />\n                <br />\n                <label className=\"lc\">Mot de passe *</label>\n                <input id=\"pas1\" type=\"password\" name=\"password\" onChange={this.handleChangePass} />\n                <br />\n                <label className=\"lc\">Comfirmation mot de passe *</label>\n                <input id=\"pas2\" type=\"password\" name=\"\" />\n                <br />\n\n                <label>Civilité *</label>\n                <input id=\"\" className=\"ci\" type=\"radio\" name=\"sexe\" id=\"\" value=\"femme\" onChange={this.handleChangeSexe} />\n                <label>femme</label>\n                <input id=\"\" className=\"ci2\" type=\"radio\" name=\"sexe\" id=\"\" value=\"homme\" onChange={this.handleChangeSexe} />\n                <label>homme</label>\n\n                <br />\n                <label className=\"lc\">Nom *</label>\n                <input id=\"clear3\" type=\"text\" name=\"nom\" onChange={this.handleChangeNom} />\n                <br />\n                <label className=\"lc\">Prénom *</label>\n                <input id=\"clear4\" type=\"text\" name=\"Prénom\" onChange={this.handleChangePrenom} />\n                <br />\n                <label className=\"lc\">N° et libellé de la voie *</label>\n                <input id=\"clear5\" type=\"number\" name=\"voie\" onChange={this.handleChangeVoie} />\n                <br />\n                <label className=\"lc\">Immeuble, Bâtiment, Résidence</label>\n                <input id=\"clear6\" type=\"text\" name=\"Immeuble\" onChange={this.handleChangeImmeuble} />\n                <br />\n                <label className=\"lc\">Lieu-dit, boîte postale, etc</label>\n                <input id=\"clear7\" type=\"text\" name=\"etc\" onChange={this.handleChangeEtc} />\n                <br />\n                <label className=\"lc\">Code postal *</label>\n                <input id=\"clear8\" type=\"number\" name=\"cp\" onChange={this.handleChangeCp} />\n                <br />\n                <label className=\"lc\">Ville *</label>\n                <input id=\"clear9\" type=\"text\" name=\"Ville\" onChange={this.handleChangeVille} />\n                <br />\n                <label className=\"lc\">Pays *</label>\n                <input id=\"clear10\" type=\"text\" name=\"Pays\" onChange={this.handleChangePays} />\n                <br />\n                <label className=\"lc\">Téléphone *</label>\n                <input id=\"clear11\" type=\"number\" name=\"Telephone\" onChange={this.handleChangeTelephone} />\n                <br />\n                <label className=\"lc\">Date de naissance * </label>\n                <input id=\"\" type=\"date\" name=\"\" id=\"\" name=\"naissance\" onChange={this.handleChangeNaissance} />\n                <p>* Champs obligatoire *</p>\n                <br />\n               \n\n                <button className=\"btn_pre vert\">CRÉER MON COMPTE</button>\n              </div>\n            </form>\n            <a href=\"/\"><button className=\"btn_pre rouge\">ANNULER</button></a>\n            <button className=\"btn_pre effa\" onClick={this.clear}>EFFACER</button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"contIn\">\n        <div id=\"myForm\" >\n          <form onSubmit={this.handleSubmit}>\n            <h1 className=\"tinsc\">Inscription</h1>\n            <div className=\"contenaireCreate\">\n\n\n              <label className=\"lc\">Adresse e-mai *</label>\n              <input id=\"clear1\" type=\"mail\" name=\"email\" onChange={this.handleChange} />\n              <br />\n              <label className=\"lc\">Comfirmation e-mai *</label>\n              <input id=\"clear2\" type=\"mail\" name=\"emailconfirme\" />\n              <br />\n              <label className=\"lc\">Mot de passe *</label>\n              <input id=\"pas1\" type=\"password\" name=\"password\" onChange={this.handleChangePass} />\n              <br />\n              <label className=\"lc\">Comfirmation mot de passe *</label>\n              <input id=\"pas2\" type=\"password\" name=\"\" />\n              <br />\n\n              <label>Civilité *</label>\n              <input id=\"\" className=\"ci\" type=\"radio\" name=\"sexe\" id=\"\" value=\"femme\" onChange={this.handleChangeSexe} />\n              <label>femme</label>\n              <input id=\"\" className=\"ci2\" type=\"radio\" name=\"sexe\" id=\"\" value=\"homme\" onChange={this.handleChangeSexe} />\n              <label>homme</label>\n\n              <br />\n              <label className=\"lc\">Nom *</label>\n              <input id=\"clear3\" type=\"text\" name=\"nom\" onChange={this.handleChangeNom} />\n              <br />\n              <label className=\"lc\">Prénom *</label>\n              <input id=\"clear4\" type=\"text\" name=\"Prénom\" onChange={this.handleChangePrenom} />\n              <br />\n              <label className=\"lc\">N° et libellé de la voie *</label>\n              <input id=\"clear5\" type=\"number\" name=\"voie\" onChange={this.handleChangeVoie} />\n              <br />\n              <label className=\"lc\">Immeuble, Bâtiment, Résidence</label>\n              <input id=\"clear6\" type=\"text\" name=\"Immeuble\" onChange={this.handleChangeImmeuble} />\n              <br />\n              <label className=\"lc\">Lieu-dit, boîte postale, etc</label>\n              <input id=\"clear7\" type=\"text\" name=\"etc\" onChange={this.handleChangeEtc} />\n              <br />\n              <label className=\"lc\">Code postal *</label>\n              <input id=\"clear8\" type=\"number\" name=\"cp\" onChange={this.handleChangeCp} />\n              <br />\n              <label className=\"lc\">Ville *</label>\n              <input id=\"clear9\" type=\"text\" name=\"Ville\" onChange={this.handleChangeVille} />\n              <br />\n              <label className=\"lc\">Pays *</label>\n              <input id=\"clear10\" type=\"text\" name=\"Pays\" onChange={this.handleChangePays} />\n              <br />\n              <label className=\"lc\">Téléphone *</label>\n              <input id=\"clear11\" type=\"number\" name=\"Telephone\" onChange={this.handleChangeTelephone} />\n              <br />\n              <label className=\"lc\">Date de naissance * </label>\n              <input id=\"\" type=\"date\" name=\"\" id=\"\" name=\"naissance\" onChange={this.handleChangeNaissance} />\n              <p>* Champs obligatoire *</p>\n              <br />\n\n              <button className=\"btn_pre vert\">CRÉER MON COMPTE</button>\n            </div>\n          </form>\n          <button className=\"btn_pre effa\" onClick={this.clear}>EFFACER</button>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default InscriptionMain;","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PrivatisationPresentationMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\AjoutConcertsMain.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\LoginInscription.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConcertMain.js",["248"],"import React, { useState } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport CarouselConcert from './CarouselConcert';\nimport ReactPlayer from 'react-player';\n\nexport default function ConcertMain() {\n    const [refreshKey] = useState(0);\n\n    function useQuery() {\n        return new URLSearchParams(useLocation().search);\n    }\n\n    let query = useQuery();\n    let paramArtist = \"\";\n    paramArtist = query.get(\"artist\");\n\n    const getConcerts = async () => {\n        let result = await axios(\n            'https://localhost:8000/concert/artist?artist=' + paramArtist,\n        );\n        // return the result\n        return result;\n    };\n\n    const [data, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        if (paramArtist !== \"\") {\n            getConcerts().then(res => {\n                setData(res.data)\n            })\n        }\n    }, [refreshKey]);\n\n    function dateConvert(date) {\n        date = date.toString();\n        date = date.split('T');\n        date = date[0].split('-');\n        for (let i = 0; i < date.length; i++) {\n            date[i] = parseInt(date[i]);\n        }\n        return date;\n    }\n\n    const findMinPrice = (maxPrice, nbPlaces) => {\n        const nbLigne = ((nbPlaces - (nbPlaces % 12)) / 12) + 1;\n        const minPrice = Math.round(maxPrice - (maxPrice * (5 * nbLigne) / 100));\n        return minPrice;\n    }\n\n    const concerts = () => {\n        let resultConcerts = [];\n\n        if (data[0] !== undefined) {\n            for (let i = 0; i < data.length; i++) {\n                let date = dateConvert(data[i][\"date\"]);\n\n                let subDate = data[i][\"date\"].substring(11, 16);\n                subDate = subDate.split(':');\n                data[i][\"date\"] = date[2] + \"/\" + date[1] + \"/\" + date[0];\n\n                let subTime = data[i][\"time\"].substring(11, 16);\n                subTime = subTime.split(':');\n                data[i][\"time\"] = subTime[0] + \"H\" + subTime[1];\n\n                let subOpen = data[i][\"timeOpen\"].substring(11, 16);\n                subOpen = subOpen.split(':');\n                data[i][\"timeOpen\"] = subOpen[0] + \"H\" + subOpen[1];\n                resultConcerts.push(data[i]);\n\n                let minPrice = findMinPrice(data[i].maxPrice, data[i].concertRoom.placeNumber)\n\n                data[i][\"maxPrice\"] = \"De \" + minPrice + \"€ à \" + data[i].maxPrice + \"€\";\n                resultConcerts.push(data[i]);\n            }\n            return resultConcerts;\n        }\n    }\n\n    concerts();\n\n    return (\n        //<SliderConcertContext.Provider value={contextConcert}>\n        <main id=\"concert\">\n            <div id=\"topArtist\">\n                <img src={data[0] ? `/affiches/${data[0].artistImg}` : \"\"} alt=\"affiche-concert\" height={300} />\n                <ul>\n                    <li className=\"bold\">{data[0] ? data[0].artist : \"\"}</li>\n                    <li>{data[0] ? data[0].name : \"\"}</li>\n                    <li>{data[0] ? data[0].date : \"\"}</li>\n                    <li>{data[0] ? data[0].concertRoom.name : \"\"}</li>\n                    <li>{data[0] ? data[0].musicType : \"\"}</li>\n                </ul>\n            </div>\n            <section>\n                <div id=\"concertsTab\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th colSpan={2}>Date</th>\n                                <th colSpan={2}>Lieu</th>\n                                <th colSpan={2}>Heure</th>\n                                <th colSpan={2}>Ouverture</th>\n                                <th colSpan={2}>Catégorie de tarifs</th>\n                                <th colSpan={2}>Tarifs</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        {\n                            data ?\n                                (data.map((element, index) => {\n                                    return <tbody key={index}>\n                                        <tr>\n                                            <td colSpan={2}>{element.date}</td>\n                                            <td colSpan={2}>{element.concertRoom.name}</td>\n                                            <td colSpan={2}>{element.time}</td>\n                                            <td colSpan={2}>{element.timeOpen}</td>\n                                            <td colSpan={2}>{element.category}</td>\n                                            <td colSpan={2}>{element.maxPrice}</td>\n                                            <td><NavLink exact to={\"/ConcertReservation?id=\" + element.id} className=\"bookingLink\">Réserver</NavLink></td>\n                                        </tr>\n                                    </tbody>\n                                })\n                                ) : (<tbody><tr><td>Chargement</td></tr></tbody>)\n                        }\n                    </table>\n                </div>\n\n                <div id=\"artistPresentation\">\n                    <div id=\"leftPrez\">\n                        <h3>Présentation de l'artiste / groupe</h3>\n                        <p>{data[0] ? data[0].artistPres : \"\"}</p>\n                    </div>\n                    <div id=\"rightPrez\">\n                        <ReactPlayer url='https://www.youtube.com/watch?v=vjTQqTGa3dQ' height={200} />\n                    </div>\n                </div>\n\n                <div id=\"bookingCards\">\n                    <div className=\"bookingCard\">\n                        <h4>Réserver une place de Parking</h4>\n                        <p>Réservez votre place de parking dès à présent et facilitez-vous l'accès à nos salles de concert.</p>\n                        <NavLink exact to=\"/FakePage\" className=\"bookingLink\">Réserver</NavLink>\n                    </div>\n                    <div className=\"bookingCard\">\n                        <h4>Réserver au Restaurant</h4>\n                        <p>Réservez votre place dans nos restaurants pour profiter de nos mets préparés par nos grands chefs.</p>\n                        <NavLink exact to=\"/FakePage\" className=\"bookingLink\">Réserver</NavLink>\n                    </div>\n                </div>\n\n            </section>\n\n            <div id=\"sliderContainer\">\n                <h3>A NE PAS MANQUER</h3>\n                <CarouselConcert dataid={data[0] ? data[0].id : \"\"}/>\n            </div>\n\n        </main>)\n    //</SliderConcertContext.Provider>;\n}\n","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ProgrammationMain.js",["249","250","251","252","253"],"import React, { useState, useContext } from 'react'\nimport { Button } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SeatsBookingContext from '../components/SeatsBookingContext';\n\nconst ProgrammationMain = ({ city, style, datedebut, datefin }) => {\n\n    const [cities, setCities] = useState('tous');\n    const [refreshKey, setRefreshKey] = useState(0);\n    const context = useContext(SeatsBookingContext);\n\n    const getSalles = async () => {\n        let result = await axios(\n            'https://localhost:8000/concert',\n        );\n        // return the result\n        return result;\n    };\n\n    const [data, setData] = React.useState([])\n\n    React.useEffect(() => {\n\n        getSalles().then(res => {\n            setData(res.data)\n        })\n    }, [refreshKey]);\n\n    //console.log(JSON.stringify(data, null, 2));\n    //console.log(data[0]);\n    /*\n        const handleChange = (event) => {\n            setCategories({ ...categories, [event.target.name]: event.target.checked });\n        };*/\n\n    const [cityButton, setCityButton] = useState([\n        {\n            id: 1,\n            name: \"tous\",\n            label: \"TOUS\",\n        },\n        {\n            id: 2,\n            name: \"Aix\",\n            label: \"AIX-EN-PROVENCE\",\n        },\n        {\n            id: 3,\n            name: \"Bourges\",\n            label: \"BOURGES\",\n        },\n        {\n            id: 4,\n            name: \"Cannes\",\n            label: \"CANNES\",\n        },\n        {\n            id: 5,\n            name: \"Dunkerque\",\n            label: \"DUNKERQUE\",\n        },\n        {\n            id: 6,\n            name: \"Echirolles\",\n            label: \"ECHIROLLES\",\n        }\n    ]);\n\n    //const cityPersistance = JSON.parse(localStorage.getItem(\"cityFilter\"));\n    //console.log(cityPersistance);\n    const stylePersistance = JSON.parse(localStorage.getItem(\"styleFilter\"));\n    const [activeButton, setActiveButton] = useState(city);//cityPersistance));\n    console.log(activeButton);\n    console.log(context.cityFilter);\n    const [activeRadio, setActiveRadio] = useState(parseInt(stylePersistance));\n\n    const today = new Date();\n    const inTenDays = new Date(today.getTime() + 86400000 * 120); // Multiplier par le nombre de jours souhaités entre la date de début et la date de fin\n    const [selectedFirstDate, setSelectedFirstDate] = React.useState(today);\n    const [selectedLastDate, setSelectedLastDate] = React.useState(inTenDays);\n    const [feedBack, setFeedBack] = useState(null);\n\n    const handleFirstDateChange = (date) => {\n        setSelectedFirstDate(date);\n        setRefreshKey(oldKey => oldKey + 1)\n        createCards();\n\n    };\n\n    const handleLastDateChange = (date) => {\n        setSelectedLastDate(date);\n        setRefreshKey(oldKey => oldKey + 1)\n        createCards();\n\n    };\n\n    const resetDates = () => {\n        setSelectedFirstDate(today);\n        setSelectedLastDate(inTenDays);\n        setRefreshKey(oldKey => oldKey + 1)\n        createCards();\n    }\n\n    // MAJ FILTRE CATEGORIES\n    const [categorie, setCategorie] = useState('Toutes');\n\n    const handleChange = (event) => {\n        setCategorie(event.target.value);\n        setRefreshKey(oldKey => oldKey + 1);\n        createCards();\n    };\n\n    const activeBtn = (event) => {\n        setCities(event.currentTarget.name);\n        console.log(cities);\n        setActiveButton(event.currentTarget.id.substring(6));\n        localStorage.setItem(\"cityFilter\", JSON.stringify(event.currentTarget.id.substring(6))); // Persistance filtre ville\n        setRefreshKey(oldKey => oldKey + 1)\n        createCards();\n\n    }\n\n    function dateConvert(date) {\n        date = date.toString();\n        date = date.split('T');\n        date = date[0].split('-');\n        for (let i = 0; i < date.length; i++) {\n            date[i] = parseInt(date[i]);\n        }\n        return date;\n    }\n\n    function formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = '' + d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        let result = [];\n        result.push(parseInt(year));\n        result.push(parseInt(month));\n        result.push(parseInt(day));\n        return result;\n    }\n\n    const findMinPrice = (maxPrice, nbPlaces) => {\n        const nbLigne = ((nbPlaces - (nbPlaces % 12)) / 12) + 1;\n        const minPrice = Math.round(maxPrice - (maxPrice * (5 * nbLigne) / 100));\n        return minPrice;\n    }\n\n    const createCards = () => {\n\n        //console.log(\"selectedFirstDate: \", selectedFirstDate);\n        //console.log(\"selectedLastDate: \",selectedLastDate);\n        //console.log(\"categorie: \",categorie);\n        //console.log(\"_______________________\");\n\n        let firstD = formatDate(selectedFirstDate);\n        let lastD = formatDate(selectedLastDate);\n\n        var a = new Date(firstD[0], firstD[1] - 1, firstD[2]);\n        var b = new Date(lastD[0], lastD[1] - 1, lastD[2]);\n\n        let resultCards = [];\n\n        for (let i = 0; i < data.length; i++) {\n\n            let dateTest = dateConvert(data[i][\"time\"]);\n            const dateCheck = new Date(dateTest[0], dateTest[1] - 1, dateTest[2]);\n            let inRange = dateCheck >= a && dateCheck <= b;\n            if ((categorie !== \"Toutes\") && (cities !== \"tous\")) {\n                if ((inRange === true) && (categorie === data[i][\"musicType\"]) && (cities === data[i][\"concertRoom\"][\"name\"])) {\n                    let sub = data[i][\"time\"].substring(11, 16);\n                    sub = sub.split(':');\n                    data[i][\"time\"] = \"Le \" + dateTest[2] + \"/\" + dateTest[1] + \"/\" + dateTest[0] + \" à \" + sub[0] + \"H\" + sub[1];\n                    resultCards.push(data[i]);\n                }\n            } else if ((categorie !== \"Toutes\") && (cities === \"tous\")) {\n                if ((inRange === true) && (categorie === data[i][\"musicType\"])) {\n                    let sub = data[i][\"time\"].substring(11, 16);\n                    sub = sub.split(':');\n                    data[i][\"time\"] = \"Le \" + dateTest[2] + \"/\" + dateTest[1] + \"/\" + dateTest[0] + \" à \" + sub[0] + \"H\" + sub[1];\n                    resultCards.push(data[i]);\n                }\n\n            } else if ((categorie === \"Toutes\") && (cities !== \"tous\")) {\n                if ((inRange === true) && (cities === data[i][\"concertRoom\"][\"name\"])) {\n                    let sub = data[i][\"time\"].substring(11, 16);\n                    sub = sub.split(':');\n                    data[i][\"time\"] = \"Le \" + dateTest[2] + \"/\" + dateTest[1] + \"/\" + dateTest[0] + \" à \" + sub[0] + \"H\" + sub[1];\n                    resultCards.push(data[i]);\n                }\n            } else {\n                if (inRange === true) {\n                    let sub = data[i][\"time\"].substring(11, 16);\n                    sub = sub.split(':');\n                    data[i][\"time\"] = \"Le \" + dateTest[2] + \"/\" + dateTest[1] + \"/\" + dateTest[0] + \" à \" + sub[0] + \"H\" + sub[1];\n                    resultCards.push(data[i]);\n                }\n            }\n        }\n\n        return resultCards;\n    }\n\n    const init = createCards();\n\n    return (\n        <main id=\"programmation\">\n            <div id=\"topCont\">\n                <div className=\"titleCont\">\n                    <h1>PROGRAMMATION</h1>\n                </div>\n            </div>\n            <div id=\"filtresContainer\">\n                <div id=\"cityContainer\">\n                    {cityButton.map((element, index) => {\n                        return (\n                            <Button key={index} id={`button${element.id}`} className={activeButton == element.id ? \"cityFilter actif\" : \"cityFilter\"} name={element.name} onClick={activeBtn}>{element.label}</Button>\n                        )\n                    })}\n                    {/*\n                    <Button className=\"cityFilter\" name=\"tous\" onClick={activeBtn} autoFocus>TOUS</Button>\n                    <Button className=\"cityFilter\" name=\"Aix\" onClick={activeBtn}>AIX-EN-PROVENCE</Button>\n                    <Button className=\"cityFilter\" name=\"Bourges\" onClick={activeBtn}>BOURGES</Button>\n                    <Button className=\"cityFilter\" name=\"Cannes\" onClick={activeBtn}>CANNES</Button>\n                    <Button className=\"cityFilter\" name=\"Dunkerque\" onClick={activeBtn}>DUNKERQUE</Button>\n                    <Button className=\"cityFilter\" name=\"Echirolles\" onClick={activeBtn}>ECHIROLLES</Button>*/}\n                </div>\n                <div id=\"categoriesContainer\">\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Catégorie de musique:</FormLabel>\n                        <RadioGroup aria-label=\"cat\" name=\"category\" value={categorie} onChange={handleChange} row>\n                            <FormControlLabel value=\"Toutes\" control={<Radio />} label=\"Toutes\" />\n                            <FormControlLabel value=\"Pop\" control={<Radio />} label=\"Pop\" />\n                            <FormControlLabel value=\"Rock\" control={<Radio />} label=\"Rock\" />\n                            <FormControlLabel value=\"Electro\" control={<Radio />} label=\"Electro\" />\n                            <FormControlLabel value=\"Rap / Hip-Hop\" control={<Radio />} label=\"Rap / Hip-Hop\" />\n                            <FormControlLabel value=\"Soul / Funk\" control={<Radio />} label=\"Soul / Funk\" />\n                            <FormControlLabel value=\"Classique\" control={<Radio />} label=\"Classique\" />\n                            <FormControlLabel value=\"Dub / Reggae\" control={<Radio />} label=\"Dub / Reggae\" />\n                            <FormControlLabel value=\"World\" control={<Radio />} label=\"World\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                <div id=\"datesContainer\">\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"dd/MM/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-first-date\"\n                            label=\"Du\"\n                            value={selectedFirstDate}\n                            onChange={handleFirstDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"dd/MM/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-last-date\"\n                            label=\"Au\"\n                            value={selectedLastDate}\n                            onChange={handleLastDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <Button onClick={() => resetDates()} id=\"resetDates\">Réinitialiser les dates</Button>\n                </div>\n            </div>\n\n            <div id=\"concertsContainer\">\n                {feedBack ? <h3>Désolé, aucun concert trouvé avec ces critères</h3> : init.map((element, index) => {\n                    return <div className=\"concertCard\" key={index}>\n                        <div className=\"programmationPicture\">\n                            <div style={{ backgroundImage: `URL(/affiches/${element.artistImg})` }}></div>\n                        </div>\n                        <div className=\"detailConcert\">\n                            <p className=\"bold\">{element.artist}</p>\n                            <p>Tournée {element.name}</p>\n                            <p>{element.time}</p>\n                            <p>à {element.concertRoom[\"name\"]}</p>\n                            <p>Catégorie: {element.musicType}</p>\n                            <p>Tarifs: de {findMinPrice(element.maxPrice, element.concertRoom[\"placeNumber\"])}€ à {element.maxPrice}€</p>\n                            <NavLink exact to={\"/Concert?artist=\" + element.artist} className=\"cardBtn\">Réserver</NavLink>\n                        </div>\n                    </div>\n                })}\n            </div>\n\n        </main>);\n}\n\nexport default ProgrammationMain;\n","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\CarouselActu.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ConnectDeconnect.js",["254","255","256"],"import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AuthApi from '../services/authApi';\r\nimport AuthContext from '../context/AuthContext'\r\n\r\nconst Menu = ({history}) => {\r\n\r\n    const {isAuth, setIsAuth} = useContext(AuthContext);\r\n\r\n    const handleLogout = () => {\r\n        AuthApi.logout();\r\n        setIsAuth(false);\r\n        history.push('/login');\r\n    }    \r\n\r\n    return (\r\n      \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {!isAuth && (\r\n                        <li>\r\n                            <NavLink className=\"accountLink\" to=\"/login\">login</NavLink >\r\n                        </li>\r\n                    )\r\n                    ||\r\n                    (\r\n                        <li className=\"nav-item\">\r\n                            <a onClick={handleLogout} className=\"accountLink\" href=\"#\">Déconnexion</a>\r\n                        </li>\r\n                    )\r\n                    }\r\n                </ul>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\citiesSelect.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\SimpleModal.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\CarouselConcert.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepperConcert.js",["257"],"import React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepReservation from './StepReservation';\nimport StepPanier from './StepPanier';\nimport StepCoordonnees from './StepCoordonnees';\nimport SeatsBookingContext from './SeatsBookingContext';\nimport StepPaiement from './StepPaiement';\nimport StepConfirmation from './StepConfirmation';\nimport { useLocation } from 'react-router-dom';\nimport ConcertContext from './ConcertContext';\nimport { positions, Provider } from \"react-alert\";\nimport AlertMUITemplate from \"react-alert-template-mui\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Réservation', 'Panier d\\'achat', 'Coordonnées', 'Paiement', 'Confirmation'];\n}\n\nfunction dateConvert(date) {\n  if ((date !== null) && (date !== undefined)) {\n    let dateIntermediaire = date;\n    dateIntermediaire = dateIntermediaire.toString();\n    dateIntermediaire = dateIntermediaire.split('T');\n    dateIntermediaire = dateIntermediaire[0].split('-');\n\n    for (let i = 0; i < dateIntermediaire.length; i++) {\n      dateIntermediaire[i] = parseInt(dateIntermediaire[i]);\n    }\n\n    let sub = date.substring(11, 16);\n    sub = sub.split(':');\n    date = \"Le \" + dateIntermediaire[2] + \"/\" + dateIntermediaire[1] + \"/\" + dateIntermediaire[0] + \" à \" + sub[0] + \"H\" + sub[1];\n\n    return date;\n  }\n}\n\nfunction getStepContent(step) {\n\n  switch (step) {\n    case 0:\n      return <StepReservation method={dateConvert} />;\n    case 1:\n      return <StepPanier method={dateConvert} />;\n    case 2:\n      return <StepCoordonnees />;\n    case 3:\n      return <StepPaiement method={dateConvert} />;\n    case 4:\n      return <StepConfirmation method={dateConvert} />;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper() {\n  const classes = useStyles();\n  //const [activeStep, setActiveStep] = React.useState(0);\n  //const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  const context = useContext(SeatsBookingContext);\n  /*\n    const isStepOptional = (step) => {\n      return false; //step === 1;\n    };\n  \n    const isStepSkipped = (step) => {\n      return skipped.has(step);\n    };*/\n  /*\n    const handleNext = () => {\n      let newSkipped = skipped;\n      if (isStepSkipped(context.activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(context.activeStep);\n      }\n  \n      context.setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n    };\n  \n    const handleBack = () => {\n      context.setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n  \n    const handleSkip = () => {\n      if (!isStepOptional(context.activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n  \n      context.setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped((prevSkipped) => {\n        const newSkipped = new Set(prevSkipped.values());\n        newSkipped.add(context.activeStep);\n        return newSkipped;\n      });\n    };*/\n  /*\n    const handleReset = () => {\n      context.setActiveStep(0);\n    };*/\n\n  const [refreshKey] = useState(0);\n\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  let query = useQuery();\n  let paramId = \"\";\n  paramId = query.get(\"id\");\n\n  const getSalle = async () => {\n    let result = await axios(\n      'https://localhost:8000/concert/' + paramId,\n    );\n    // return the result\n    return result;\n  };\n\n  const [data, setData] = React.useState([])\n\n  React.useEffect(() => {\n    getSalle().then(res => {\n      setData(res.data)\n    })\n  }, [refreshKey]);\n\n  const contextConcert = useContext(ConcertContext);\n\n  contextConcert.setConcert(data);\n\n  // Alert step Paiement\n  const options = {\n    position: positions.MIDDLE\n  };\n\n  return (\n    <Provider template={AlertMUITemplate} {...options}>\n      <div className={classes.root}>\n        <Stepper activeStep={context.activeStep} className=\"titleCont\">\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            /*\n            if (isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }*/\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        {/*  <div>\n        \n        {context.activeStep === steps.length ? (\n          <div className=\"stepBody\">\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (*/}\n        <div className=\"stepBody\">\n          <div className={classes.instructions}>{getStepContent(context.activeStep)}</div>\n          {/* <div>\n          <NavLink exact to={\"/Concert?artist=\" + data.artist} onClick={handleBack} className=\"cancelStep\">\n            ANNULER\n          </NavLink>\n          {isStepOptional(context.activeStep) && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSkip}\n              className={classes.button}\n            >\n              Passer\n            </Button>\n          )}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleNext}\n            className={classes.button}\n          >\n            {context.activeStep === steps.length - 1 ? 'Terminer' : 'Suivant'}\n          </Button>\n        </div> */}\n        </div>\n      </div>\n    </Provider>\n  );\n\n}","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepPanier.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepReservation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepCoordonnees.js",["258"],"import React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { TextField } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SeatsBookingContext from './SeatsBookingContext';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport AuthContext from '../context/AuthContext';\nimport UserContext from './UserContext';\nimport AuthApi from '../services/authApi';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nexport default function StepCoordonnees() {\n\n  const [hideStep, setHideStep] = useState(0);\n\n  /*\nconst [value, setValue] = React.useState('female');\n\n\nconst [selectedDate, setSelectedDate] = React.useState(new Date('2021-02-01T21:11:54'));\n \nconst handleDateChange = (date) => {\nsetSelectedDate(date);\n};\n\n\nconst handleChange = (event) => {\nsetValue(event.target.value);\n};*/\n\n  const context = useContext(SeatsBookingContext);\n  const contextUser = useContext(UserContext);\n\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  const decrypt = async () => {\n    const token = window.localStorage.getItem('authToken');\n\n    let result = '';\n\n    if (token) {\n      const jwtData = jwtDecode(token);\n\n      result = await axios\n        .get(\"https://localhost:8000/user/\" + jwtData.username);\n    }\n    contextUser.setUser(result.data);\n    return result;\n  }\n\n  React.useEffect(() => {\n    decrypt().then(res => {\n      if (window.localStorage.getItem('authToken')) {\n        setPersonnalData({\n          mail: res.data[0].mail,\n          gender: res.data[0].gender,\n          name: res.data[0].name,\n          firstname: res.data[0].firstname,\n          street: res.data[0].street,\n          building: res.data[0].building,\n          addressComplement: res.data[0].addressComplement,\n          postalCode: res.data[0].postalCode,\n          city: res.data[0].city,\n          country: res.data[0].country,\n          phone: res.data[0].phone,\n          birthday: res.data[0].birthday,\n        })\n      }\n    })\n  }, [refreshKey]\n  );\n\n\n  const [personnalData, setPersonnalData] = useState({\n    mail: '',\n    gender: '',\n    name: '',\n    firstname: '',\n    street: '',\n    building: '',\n    addressComplement: '',\n    postalCode: '',\n    city: '',\n    country: '',\n    phone: '',\n    birthday: '',\n  })\n\n  const [registrationData, setRegistrationData] = useState({\n    email: '',\n    emailConfirmation: '',\n    password: '',\n    passwordConfirmation: '',\n    gender: 'female',\n    nom: '',\n    prenom: '',\n    voie: '',\n    batiment: '',\n    BP: '',\n    codePostal: '',\n    ville: '',\n    pays: '',\n    telephone: '',\n    birthDate: '',\n  })\n\n  const personnalDataChange = (event) => {\n    setPersonnalData({ ...personnalData, [event.target.id]: event.target.value });\n    console.log(personnalData);\n  }\n\n  const registrationDataChange = (event) => {\n    setRegistrationData({ ...registrationData, [event.target.id]: event.target.value });\n    console.log(registrationData);\n  }\n\n  const resetForm = () => {\n    setRegistrationData({\n      email: '',\n      emailConfirmation: '',\n      password: '',\n      passwordConfirmation: '',\n      gender: '',\n      nom: '',\n      prenom: '',\n      voie: '',\n      batiment: '',\n      BP: '',\n      codePostal: '',\n      ville: '',\n      pays: '',\n      telephone: '',\n      birthDate: '',\n    });\n    console.log(registrationData);\n  }\n\n  const { setIsAuth } = useContext(AuthContext);\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  })\n\n  const [error, setError] = useState(\"\")\n\n  const handleChange = (event) => {\n    const value = event.currentTarget.value\n    const name = event.currentTarget.name\n\n    setCredentials({ ...credentials, [name]: value })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await AuthApi.auth(credentials);\n      setError(\"\");\n      setIsAuth(true);\n      setRefreshKey(1);\n    } catch (errorRequest) {\n      setError('error de login');\n      console.log(errorRequest);\n    }\n    decrypt();\n    setHideStep(1);\n  }\n\n  const hiddenStep = () => {\n\n    if (hideStep === 0) {\n      return (<section id=\"sectionStepCoordonnees\">\n\n        <div id=\"login\">\n          <h3>Vous avez déjà un compte</h3>\n          <p className=\"subTitle\">Connectez-vous</p>\n          <form className=\"login-form\" autoComplete=\"off\">\n            <FormControl>\n              <TextField id=\"email\" label=\"Email\" variant=\"filled\" name=\"username\" value={credentials.username} onChange={handleChange} className={(error && \" is-invalid\")} />\n              {error && <p className=\"invalid-feedback\">{error}</p>}\n            </FormControl>\n            <FormControl>\n              <TextField id=\"password\" label=\"Mot de passe\" variant=\"filled\" name=\"password\" value={credentials.password} onChange={handleChange} type=\"password\" />\n            </FormControl>\n            <Button type=\"button\" className=\"nextStep\" onClick={handleSubmit}>VALIDER</Button>\n          </form>\n          <a href=\"/FakePage\">Mot de passe oublié</a>\n        </div>\n\n        <div id=\"registration\">\n          <h3>Vous n'avez pas de compte</h3>\n          <p className=\"subTitle\">Créez votre compte</p>\n          <p>Créez votre compte et simplifiez vos réservations.</p>\n          <p>Conservez vos données en toute sécurité et évitez de\n            remplir vos informations à chaque commande.</p>\n          <p>Gérez vos alertes e-mails pour vos artistes ou salles\n              préférées.</p>\n          <p>Téléchargez et imprimez vos E-Tickets et factures\n          d'achat directement depuis votre compte.</p>\n\n          <Button className=\"nextStep\" onClick={() => setHideStep(2)}>CRÉER MON COMPTE</Button>\n\n        </div>\n\n      </section>)\n    } else if (hideStep === 1) {\n      return (\n        <section id=\"sectionVerifs\">\n          <h3>VÉRIFIEZ VOS INFORMATIONS PERSONNELLES</h3>\n          <form id=\"verifs\">\n            <FormControl>\n              <TextField id=\"mail\" label=\"Adresse email *\" variant=\"filled\" defaultValue={personnalData.mail} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Civilité *</FormLabel>\n              <RadioGroup aria-label=\"gender\" id=\"gender\" name=\"gender\" defaultValue={personnalData.gender} onChange={personnalDataChange} className=\"radioGrp\">\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Madame\" />\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Monsieur\" />\n                <FormControlLabel value=\"other\" control={<Radio />} label=\"Autre\" />\n              </RadioGroup>\n            </FormControl>\n            <FormControl>\n              <TextField id=\"name\" label=\"Nom *\" variant=\"filled\" defaultValue={personnalData.name} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"firstname\" label=\"Prénom *\" variant=\"filled\" defaultValue={personnalData.firstname} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"street\" label=\"N° et libéllé de la voie *\" variant=\"filled\" defaultValue={personnalData.street} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"building\" label=\"Immeuble, Bâtiment, Résidence *\" variant=\"filled\" defaultValue={personnalData.building} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"addressComplement\" label=\"Lieu-dit, Boîte-postale, etc\" variant=\"filled\" defaultValue={personnalData.addressComplement} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"postalCode\" label=\"Code Postal *\" variant=\"filled\" defaultValue={personnalData.postalCode} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"city\" label=\"Ville *\" variant=\"filled\" defaultValue={personnalData.city} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"country\" label=\"Pays *\" variant=\"filled\" defaultValue={personnalData.country} onChange={personnalDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"phone\" label=\"Téléphone *\" variant=\"filled\" defaultValue={personnalData.phone} onChange={personnalDataChange} />\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"birthday\"\n                label=\"Date de naissance\"\n                locale='fr'\n                format=\"MM/dd/yyyy\"\n                defaultValue={personnalData.birthday}\n                onChange={personnalDataChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n            <p>* Champs obligatoires</p>\n          </form>\n\n          <div id=\"stepperButtonsCont\">\n            <Button onClick={() => context.setActiveStep(1)} className=\"cancelStep\">ANNULER</Button>\n            <Button onClick={() => context.setActiveStep(3)} className=\"nextStep\">VALIDER</Button>\n          </div>\n\n        </section>\n      )\n    } else {\n      return (\n        <section id=\"sectionVerifs\">\n          <h3>CRÉATION DE VOTRE COMPTE</h3>\n          <form id=\"verifs\">\n            <FormControl>\n              <TextField id=\"email\" label=\"Adresse email *\" variant=\"filled\" value={registrationData.email} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"emailConfirmation\" label=\"Confirmation email *\" variant=\"filled\" value={registrationData.emailConfirmation} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"password\" label=\"Mot de passe *\" variant=\"filled\" helperText=\"Votre mot de passe doit comprendre au moins 8 caractères, une lettre majuscule, une lettre minuscule et un chiffre (0-9).\" value={registrationData.password} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"passwordConfirmation\" label=\"Confirmation mot de passe *\" variant=\"filled\" value={registrationData.passwordConfirmation} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Civilité *</FormLabel>\n              <RadioGroup aria-label=\"gender\" id=\"gender\" name=\"gender\" value={registrationData.gender} onChange={registrationDataChange} className=\"radioGrp\">\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Madame\" />\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Monsieur\" />\n              </RadioGroup>\n            </FormControl>\n            <FormControl>\n              <TextField id=\"nom\" label=\"Nom *\" variant=\"filled\" value={registrationData.nom} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"prenom\" label=\"Prénom *\" variant=\"filled\" value={registrationData.prenom} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"voie\" label=\"N° et libéllé de la voie *\" variant=\"filled\" value={registrationData.voie} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"batiment\" label=\"Immeuble, Bâtiment, Résidence *\" variant=\"filled\" value={registrationData.batiment} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"BP\" label=\"Lieu-dit, Boîte-postale, etc\" variant=\"filled\" value={registrationData.BP} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"codePostal\" label=\"Code Postal *\" variant=\"filled\" value={registrationData.codePostal} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"ville\" label=\"Ville *\" variant=\"filled\" value={registrationData.ville} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"pays\" label=\"Pays *\" variant=\"filled\" value={registrationData.pays} onChange={registrationDataChange} />\n            </FormControl>\n            <FormControl>\n              <TextField id=\"telephone\" label=\"Téléphone *\" variant=\"filled\" value={registrationData.telephone} onChange={registrationDataChange} />\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"birthDate\"\n                label=\"Date de naissance\"\n                locale='fr'\n                format=\"MM/dd/yyyy\"\n                value={registrationData.birthDate}\n                onChange={registrationDataChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n            <p>* Champs obligatoires</p>\n          </form>\n\n          <div id=\"stepperButtonsCont\">\n            <Button onClick={() => context.setActiveStep(1)} className=\"cancelStep\">ANNULER</Button>\n            <Button onClick={resetForm} className=\"otherCommand\">EFFACER</Button>\n            <Button onClick={() => context.setActiveStep(3)} className=\"nextStep\">VALIDER</Button>\n          </div>\n\n        </section>\n      )\n    }\n\n  }\n\n  return (\n\n    hiddenStep()\n\n  );\n}","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepPaiement.js",["259"],"import React, { useState, useContext } from 'react';\nimport SeatsBookingContext from './SeatsBookingContext';\nimport Button from 'react-bootstrap/Button';\nimport { TextField } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Loader from './ProgressCircle';\nimport ConcertContext from './ConcertContext';\nimport UserContext from './UserContext';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAlert } from \"react-alert\";\n\nconst StepPaiement = ({ method }) => {\n\n  const context = useContext(SeatsBookingContext);\n  const contextConcert = useContext(ConcertContext);\n  const contextUser = useContext(UserContext);\n\n  const [refreshKey] = useState(0);\n\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  let in_voiceDate = new Date().toLocaleDateString();\n  let reference = Math.floor(Math.random() * (\n    999999 - 100000) + 100000);\n  let query = useQuery();\n  let paramId = \"\";\n  paramId = query.get(\"id\");\n\n  const [dataInVoice, setDataInVoice] = React.useState([])\n  const [dataReservation, setDataReservation] = React.useState([])\n\n  contextUser.setReservation(dataReservation);\n\n  let in_voice = { user: contextUser.user[0].id, date: in_voiceDate };\n  let reservation = \"\";\n\n  const newInVoice = async () => {\n    let result = await axios\n      .post(\"https://localhost:8000/invoice/new\", in_voice\n      );\n    // return the result\n    return result;\n  };\n\n  const newReservation = async () => {\n    reservation = { concert: paramId, invoice: JSON.stringify(dataInVoice), reference: reference, totalPrice: (parseInt(context.prices) + parseFloat(context.deliveryPrice)), ticketType: context.deliveryMode, seats: JSON.stringify(context.seats) };\n    let result2 = await axios.post(\"https://localhost:8000/reservation/new\", reservation);\n    return result2;\n  }\n\n  React.useEffect(() => {\n    newInVoice().then(res => {\n      setDataInVoice(res.data)\n    });\n  }, [refreshKey]);\n\n  const alert = useAlert();\n\n  const [loader, setLoader] = useState(false);\n\n  const load = () => {\n    newReservation().then(res => {\n      setDataReservation(res.data)\n    });\n    setLoader(true);\n    setTimeout(() => {\n      setLoader(false);\n      context.setActiveStep(4);\n    }, 2000);\n    // Réinitialisation panier d'achat\n    context.setPurchases(0);\n    localStorage.removeItem(\"itemsPanier\");\n    localStorage.removeItem(\"reactContext\");\n  };\n\n  return (\n\n    <section id=\"sectionStepPanier\">\n\n      <div id=\"panierRecap\">\n        <h2>BONJOUR {contextUser.user[0].name}</h2>\n        <h3>Récapitulatif de votre panier</h3>\n        <div id=\"tableContainer\">\n          <table>\n            <thead>\n              <tr>\n                <th colSpan={2}>N°</th>\n                <th colSpan={2}>Nombre de places</th>\n                <th colSpan={2}>Artiste / Groupe</th>\n                <th colSpan={2}>Lieu</th>\n                <th colSpan={2}>Date et heure</th>\n                <th colSpan={2}>Catégorie de tarifs</th>\n                <th colSpan={2}>Tarif</th>\n              </tr>\n            </thead>\n            <tbody>\n              {context.seats.map((key, index) => {\n                return <tr key={index}>\n                  <td colSpan={2}>{index + 1}</td>\n                  <td colSpan={2}>1 place</td>\n                  <td colSpan={2}>{contextConcert.concert ? contextConcert.concert.artist : \"\"}</td>\n                  <td colSpan={2}>{contextConcert.concert.concertRoom ? contextConcert.concert.concertRoom.name : \"\"}</td>\n                  <td colSpan={2}>{contextConcert.concert ? method(contextConcert.concert.time) : \"\"}</td>\n                  <td colSpan={2}>{contextConcert.concert ? contextConcert.concert.category : \"\"}</td>\n                  <td colSpan={2}>{key.price}</td>\n                </tr>\n              })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div id=\"obtentionRecap\">\n        <p>Obtention des billets:</p>\n        <p>{contextConcert.concert ? contextConcert.concert.artist : \"\"}</p>\n        <p>{context.deliveryMode}</p>\n        <p>{parseFloat(context.deliveryPrice).toFixed(2)} €</p>\n      </div>\n      <div id=\"totalPanierPaiement\">\n        <div className=\"cont\">\n          <h4>MONTANT TOTAL DU PANIER</h4>\n          <h4 id=\"totalWithDelivery\">{(parseInt(context.prices) + parseFloat(context.deliveryPrice)).toFixed(2)} €</h4>\n        </div>\n      </div>\n\n      <h3 id=\"paiementTitle\">Votre paiement</h3>\n      <div id=\"paiementCont\">\n        <div id=\"paiement\">\n\n          <p>Veuillez saisir les informations de votre paiement:</p>\n          <form id=\"billing\">\n            <div id=\"creditCardsContainer\">\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"bankCard\" name=\"bankCard\">\n                  <FormControlLabel value=\"visa\" control={<Radio />} label={<i className=\"fab fa-cc-visa\"></i>} />\n                  <FormControlLabel value=\"mastercard\" control={<Radio />} label={<i className=\"fab fa-cc-mastercard\"></i>} />\n                  <FormControlLabel value=\"americanexpress\" control={<Radio />} label={<i className=\"fab fa-cc-amex\"></i>} />\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <FormControl>\n              <TextField id=\"email\" label=\"Numéro de carte\" type=\"number\" variant=\"filled\" />\n            </FormControl>\n            <div id=\"expiration\">\n              <p>Date d'expiration:</p>\n              <FormControl>\n                <TextField id=\"expirationMonth\" label=\"Mois\" type=\"number\" variant=\"filled\" InputProps={{\n                  inputProps: {\n                    max: 12, min: 1\n                  }\n                }} />\n              </FormControl>\n              <FormControl>\n                <TextField id=\"expirationYear\" label=\"Année\" type=\"number\" variant=\"filled\" InputProps={{\n                  inputProps: {\n                    max: 2025, min: 2021\n                  }\n                }} />\n              </FormControl>\n            </div>\n            <FormControl>\n              <TextField id=\"cryptogram\" label=\"Cryptogramme visuel\" type=\"number\" variant=\"filled\" InputProps={{\n                inputProps: {\n                  maxLength: 3\n                }\n              }} />\n            </FormControl>\n\n          </form>\n\n        </div>\n        <div id=\"stepperButtonsCont\">\n\n          <Button onClick={() => {\n            alert.show(\"Êtes-vous sur(e) de vouloir annuler ?\", {\n              title: \"ATTENTION\",\n              closeCopy: \"NON\",\n              actions: [\n                {\n                  copy: \"OUI\",\n                  onClick: () => { context.setActiveStep(1) }\n                },\n              ]\n            });\n          }} className=\"cancelStep\">ANNULER</Button>\n          <Button onClick={() => load()} className=\"nextStep\">VALIDER ET PAYER</Button>\n        </div>\n      </div>\n      {\n        loader ?\n\n          <Loader></Loader>\n\n          :\n\n          <div></div>\n      }\n\n    </section>\n\n  );\n}\n\nexport default StepPaiement","D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\StepConfirmation.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\PlanSalle.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\GoogleMap.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\ProgressCircle.js",[],"D:\\Ynov\\ynov-concert-pastisOlive\\Front\\src\\components\\Seat.js",[],["260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":4,"column":51,"nodeType":"268","messageId":"269","endLine":4,"endColumn":61},{"ruleId":"266","severity":1,"message":"270","line":36,"column":9,"nodeType":"268","messageId":"269","endLine":36,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":50,"column":1,"nodeType":"273","endLine":55,"endColumn":2},{"ruleId":"266","severity":1,"message":"274","line":10,"column":22,"nodeType":"268","messageId":"269","endLine":10,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":105,"column":70,"nodeType":"277","endLine":105,"endColumn":75},{"ruleId":"275","severity":1,"message":"276","line":107,"column":71,"nodeType":"277","endLine":107,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":139,"column":50,"nodeType":"277","endLine":139,"endColumn":55},{"ruleId":"275","severity":1,"message":"276","line":139,"column":56,"nodeType":"277","endLine":139,"endColumn":72},{"ruleId":"275","severity":1,"message":"276","line":175,"column":68,"nodeType":"277","endLine":175,"endColumn":73},{"ruleId":"275","severity":1,"message":"276","line":177,"column":69,"nodeType":"277","endLine":177,"endColumn":74},{"ruleId":"275","severity":1,"message":"276","line":209,"column":48,"nodeType":"277","endLine":209,"endColumn":53},{"ruleId":"275","severity":1,"message":"276","line":209,"column":54,"nodeType":"277","endLine":209,"endColumn":70},{"ruleId":"278","severity":1,"message":"279","line":34,"column":8,"nodeType":"280","endLine":34,"endColumn":20,"suggestions":"281"},{"ruleId":"266","severity":1,"message":"282","line":44,"column":24,"nodeType":"268","messageId":"269","endLine":44,"endColumn":37},{"ruleId":"266","severity":1,"message":"283","line":83,"column":12,"nodeType":"268","messageId":"269","endLine":83,"endColumn":23},{"ruleId":"266","severity":1,"message":"284","line":83,"column":25,"nodeType":"268","messageId":"269","endLine":83,"endColumn":39},{"ruleId":"266","severity":1,"message":"285","line":89,"column":22,"nodeType":"268","messageId":"269","endLine":89,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":233,"column":100,"nodeType":"288","messageId":"289","endLine":233,"endColumn":102},{"ruleId":"290","severity":1,"message":"291","line":20,"column":30,"nodeType":"292","messageId":"293","endLine":20,"endColumn":32},{"ruleId":"290","severity":1,"message":"291","line":25,"column":21,"nodeType":"292","messageId":"293","endLine":25,"endColumn":23},{"ruleId":"294","severity":1,"message":"295","line":28,"column":29,"nodeType":"296","endLine":28,"endColumn":88},{"ruleId":"278","severity":1,"message":"297","line":145,"column":6,"nodeType":"280","endLine":145,"endColumn":18,"suggestions":"298"},{"ruleId":"278","severity":1,"message":"299","line":79,"column":6,"nodeType":"280","endLine":79,"endColumn":18,"suggestions":"300"},{"ruleId":"278","severity":1,"message":"301","line":61,"column":6,"nodeType":"280","endLine":61,"endColumn":18,"suggestions":"302"},{"ruleId":"262","replacedBy":"303"},{"ruleId":"264","replacedBy":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'NavbarRouter' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'getConcerts' and 'paramArtist'. Either include them or remove the dependency array.","ArrayExpression",["307"],"'setCityButton' is assigned a value but never used.","'activeRadio' is assigned a value but never used.","'setActiveRadio' is assigned a value but never used.","'setFeedBack' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook React.useEffect has a missing dependency: 'getSalle'. Either include it or remove the dependency array.",["308"],"React Hook React.useEffect has a missing dependency: 'decrypt'. Either include it or remove the dependency array.",["309"],"React Hook React.useEffect has a missing dependency: 'newInVoice'. Either include it or remove the dependency array.",["310"],["305"],["306"],"no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [getConcerts, paramArtist, refreshKey]",{"range":"319","text":"320"},"Update the dependencies array to be: [getSalle, refreshKey]",{"range":"321","text":"322"},"Update the dependencies array to be: [decrypt, refreshKey]",{"range":"323","text":"324"},"Update the dependencies array to be: [newInVoice, refreshKey]",{"range":"325","text":"326"},[913,925],"[getConcerts, paramArtist, refreshKey]",[4185,4197],"[getSalle, refreshKey]",[2320,2332],"[decrypt, refreshKey]",[2139,2151],"[newInVoice, refreshKey]"]